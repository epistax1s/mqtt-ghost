"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[436],{8453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>l});var i=s(6540);const r={},t=i.createContext(r);function o(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(t.Provider,{value:n},e.children)}},8605:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"components/connect","title":"Connect","description":"Basic Syntax","source":"@site/docs/components/connect.md","sourceDirName":"components","slug":"/components/connect","permalink":"/mqtt-mimic/docs/components/connect","draft":false,"unlisted":false,"editUrl":"https://github.com/epistax1s/mqtt-mimic/tree/master/doc/docs/components/connect.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Components","permalink":"/mqtt-mimic/docs/category/components"},"next":{"title":"Publish","permalink":"/mqtt-mimic/docs/components/publish"}}');var r=s(4848),t=s(8453);const o={sidebar_position:1},l="Connect",c={},d=[{value:"Basic Syntax",id:"basic-syntax",level:2},{value:"Full List of Parameters",id:"full-list-of-parameters",level:2},{value:"1. <code>host</code>",id:"1-host",level:3},{value:"2. <code>port</code>",id:"2-port",level:3},{value:"3. <code>clientId</code>",id:"3-clientid",level:3},{value:"4. <code>username</code>",id:"4-username",level:3},{value:"5. <code>password</code>",id:"5-password",level:3},{value:"6. <code>keepAlive</code>",id:"6-keepalive",level:3},{value:"7. <code>cleanStart</code>",id:"7-cleanstart",level:3},{value:"8. <code>sessionExpiryInterval</code>",id:"8-sessionexpiryinterval",level:3},{value:"9. <code>ssl</code> (SSL Settings Block)",id:"9-ssl-ssl-settings-block",level:3},{value:"10. <code>will</code> (Last Will and Testament Block)",id:"10-will-last-will-and-testament-block",level:3},{value:"Automatic Reconnection",id:"automatic-reconnection",level:2},{value:"Usage Examples",id:"usage-examples",level:2},{value:"1. Minimal Configuration",id:"1-minimal-configuration",level:3},{value:"2. Connection with Authentication",id:"2-connection-with-authentication",level:3},{value:"3. Connection with SSL",id:"3-connection-with-ssl",level:3},{value:"4. Connection with Last Will and Testament",id:"4-connection-with-last-will-and-testament",level:3},{value:"5. Full Configuration",id:"5-full-configuration",level:3},{value:"Notes and Recommendations",id:"notes-and-recommendations",level:2}];function a(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"connect",children:"Connect"})}),"\n",(0,r.jsx)(n.h2,{id:"basic-syntax",children:"Basic Syntax"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"connect"})," component is a code block in the DSL where connection parameters are defined. The minimal configuration\nrequires only the broker\u2019s address (",(0,r.jsx)(n.code,{children:"host"}),") and port (",(0,r.jsx)(n.code,{children:"port"}),"). All other parameters are optional and can be used as needed."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-groovy",children:'connect {\n    host = "broker.hivemq.com"\n    port = 1883\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:"This example connects an MQTT client to the public HiveMQ broker at broker.hivemq.com via port 1883."}),"\n",(0,r.jsx)(n.h2,{id:"full-list-of-parameters",children:"Full List of Parameters"}),"\n",(0,r.jsxs)(n.h3,{id:"1-host",children:["1. ",(0,r.jsx)(n.code,{children:"host"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Description"}),": The address of the MQTT broker (domain name or IP address)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Type"}),": String."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Required"}),": Yes."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-groovy",children:'host = "broker.hivemq.com"\n'})}),"\n",(0,r.jsxs)(n.h3,{id:"2-port",children:["2. ",(0,r.jsx)(n.code,{children:"port"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Description"}),": The port through which the client connects to the broker."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Type"}),": Integer."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Required"}),": Yes."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-groovy",children:"port = 1883\n"})}),"\n",(0,r.jsxs)(n.h3,{id:"3-clientid",children:["3. ",(0,r.jsx)(n.code,{children:"clientId"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Description"}),": A unique identifier for the client. If not specified, a random ",(0,r.jsx)(n.code,{children:"UUID"})," is automatically generated."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Type"}),": String."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Required"}),": No."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-groovy",children:'clientId = "my-mqtt-client-001"\n'})}),"\n",(0,r.jsxs)(n.h3,{id:"4-username",children:["4. ",(0,r.jsx)(n.code,{children:"username"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Description"}),": The username for authenticating with the broker."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Type"}),": String."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Required"}),": No (used only if the broker requires authentication)."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-groovy",children:'username = "user123"\n'})}),"\n",(0,r.jsxs)(n.h3,{id:"5-password",children:["5. ",(0,r.jsx)(n.code,{children:"password"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Description"}),": The password for authenticating with the broker."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Type"}),": String."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Required"}),": No (used alongside username)."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-groovy",children:'password = "secretpass"\n'})}),"\n",(0,r.jsxs)(n.h3,{id:"6-keepalive",children:["6. ",(0,r.jsx)(n.code,{children:"keepAlive"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Description"}),': The interval (in seconds) at which the client sends "keep-alive" messages to maintain the connection.']}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Type"}),": Integer."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Required"}),": No."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Default"}),": 60 seconds."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-groovy",children:"keepAlive = 30\n"})}),"\n",(0,r.jsxs)(n.h3,{id:"7-cleanstart",children:["7. ",(0,r.jsx)(n.code,{children:"cleanStart"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Description"}),": Specifies whether to start the session with a clean state (true) or restore a previous session (false)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Type"}),": Boolean."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Required"}),": No."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Default"}),": ",(0,r.jsx)(n.code,{children:"true"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-groovy",children:"cleanStart = false\n"})}),"\n",(0,r.jsxs)(n.h3,{id:"8-sessionexpiryinterval",children:["8. ",(0,r.jsx)(n.code,{children:"sessionExpiryInterval"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Description"}),": The time (in seconds) for which the session is retained on the broker after the client disconnects."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Type"}),": Integer."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Required"}),": No."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Default"}),": 0 (session is not retained)."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-groovy",children:"sessionExpiryInterval = 3600\n"})}),"\n",(0,r.jsxs)(n.h3,{id:"9-ssl-ssl-settings-block",children:["9. ",(0,r.jsx)(n.code,{children:"ssl"})," (SSL Settings Block)"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Description"}),": A block for configuring a secure connection via SSL/TLS."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Required"}),": No (used only for secure connections)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Subparameters"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"enabled"}),": Enables SSL usage (default: false)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"keystorePath"}),": Path to the KeyStore file in JKS format."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"keystorePassword"}),": Password for accessing the KeyStore."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"truststorePath"}),": Path to the TrustStore file in JKS format."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"truststorePassword"}),": Password for accessing the TrustStore."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-groovy",children:'ssl {\n    enabled = true\n    keystorePath = "/path/to/keystore.jks"\n    keystorePassword = "keystorePass"\n    truststorePath = "/path/to/truststore.jks"\n    truststorePassword = "truststorePass"\n}\n'})}),"\n",(0,r.jsxs)(n.h3,{id:"10-will-last-will-and-testament-block",children:["10. ",(0,r.jsx)(n.code,{children:"will"})," (Last Will and Testament Block)"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Description"}),': A block for configuring the "Last Will and Testament" (LWT) message, which the broker sends on behalf of the client upon an unexpected disconnection.']}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Required"}),": No."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Subparameters"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"topic"}),": The topic to which the LWT message will be sent."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"payload"}),": The content of the message (string)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"qos"}),": Quality of Service level (0, 1, or 2). Default: 1."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"retain"}),": Flag indicating whether the message should be retained (true/false). Default: false."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-groovy",children:'will {\n    topic = "status/my-client"\n    payload = "Client offline"\n    qos = 1\n    retain = true\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"automatic-reconnection",children:"Automatic Reconnection"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"connect"})," component automatically enables a reconnection mechanism if the connection to the broker is lost.\nThe reconnection settings are fixed:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Initial delay before retry: ",(0,r.jsx)(n.code,{children:"1 second"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Maximum delay between retries: ",(0,r.jsx)(n.code,{children:"10 seconds"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"These parameters are not configurable via the DSL but ensure the client\u2019s reliability."}),"\n",(0,r.jsx)(n.h2,{id:"usage-examples",children:"Usage Examples"}),"\n",(0,r.jsx)(n.h3,{id:"1-minimal-configuration",children:"1. Minimal Configuration"}),"\n",(0,r.jsx)(n.p,{children:"Connecting to a public broker without authentication or SSL:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-groovy",children:'connect {\n    host = "broker.hivemq.com"\n    port = 1883\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"2-connection-with-authentication",children:"2. Connection with Authentication"}),"\n",(0,r.jsx)(n.p,{children:"Connecting to a broker with a username and password:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-groovy",children:'connect {\n    host = "mybroker.com"\n    port = 1883\n    username = "user123"\n    password = "secretpass"\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"3-connection-with-ssl",children:"3. Connection with SSL"}),"\n",(0,r.jsx)(n.p,{children:"Connecting to a broker via a secure connection using KeyStore and TrustStore:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-groovy",children:'connect {\n    host = "securebroker.com"\n    port = 8883\n    ssl {\n        enabled = true\n        keystorePath = "/path/to/keystore.jks"\n        keystorePassword = "keystorePass"\n        truststorePath = "/path/to/truststore.jks"\n        truststorePassword = "truststorePass"\n    }\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"4-connection-with-last-will-and-testament",children:"4. Connection with Last Will and Testament"}),"\n",(0,r.jsx)(n.p,{children:"Connecting with an LWT setup to report the client\u2019s status upon disconnection:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-groovy",children:'connect {\n    host = "broker.example.com"\n    port = 1883\n    username = "user"\n    password = "pass"\n    will {\n        topic = "clients/status"\n        payload = "Client disconnected unexpectedly"\n        qos = 2\n        retain = true\n    }\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"5-full-configuration",children:"5. Full Configuration"}),"\n",(0,r.jsx)(n.p,{children:"An example using all major parameters:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-groovy",children:'connect {\n    host = "broker.example.com"\n    port = 1883\n    clientId = "client-001"\n    username = "admin"\n    password = "admin123"\n    keepAlive = 20\n    cleanStart = false\n    sessionExpiryInterval = 7200\n    ssl {\n        enabled = true\n        keystorePath = "/secure/keystore.jks"\n        keystorePassword = "keypass"\n        truststorePath = "/secure/truststore.jks"\n        truststorePassword = "trustpass"\n    }\n    will {\n        topic = "client/status"\n        payload = "Offline"\n        qos = 1\n        retain = false\n    }\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"notes-and-recommendations",children:"Notes and Recommendations"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Required Parameters"}),": Ensure host and port are always specified, or the connection will not be established."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"SSL"}),": If the broker requires a secure connection (typically port 8883), enable the ssl block and provide valid paths to\nKeyStore and TrustStore files."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"LWT"}),": Use will if it\u2019s important to notify other devices of the client\u2019s status upon disconnection."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Errors"}),": If the connection fails (e.g., due to incorrect credentials or an unavailable broker), an error message will\nappear in the logs, and an exception will be thrown."]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}}}]);